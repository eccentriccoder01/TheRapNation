from TheRapNation import app 
import asyncio
import random
from pyrogram import Client, filters
from pyrogram.enums import ChatType, ChatMemberStatus
from pyrogram.errors import UserNotParticipant
from pyrogram.types import ChatPermissions

spam_chats = []

EMOJI = [ "ЁЯжЛЁЯжЛЁЯжЛЁЯжЛЁЯжЛ",
          "ЁЯзЪЁЯМ╕ЁЯзЛЁЯНмЁЯлЦ",
          "ЁЯеАЁЯМ╖ЁЯМ╣ЁЯМ║ЁЯТР",
          "ЁЯМ╕ЁЯМ┐ЁЯТоЁЯМ▒ЁЯМ╡",
          "тЭдя╕ПЁЯТЪЁЯТЩЁЯТЬЁЯЦд",
          "ЁЯТУЁЯТХЁЯТЮЁЯТЧЁЯТЦ",
          "ЁЯМ╕ЁЯТРЁЯМ║ЁЯМ╣ЁЯжЛ",
          "ЁЯНФЁЯжкЁЯНЫЁЯН▓ЁЯеЧ",
          "ЁЯНОЁЯНУЁЯНТЁЯНСЁЯМ╢я╕П",
          "ЁЯзЛЁЯедЁЯзЛЁЯеЫЁЯН╖",
          "ЁЯНмЁЯНнЁЯзБЁЯОВЁЯНб",
          "ЁЯНиЁЯзЙЁЯН║тШХЁЯН╗",
          "ЁЯекЁЯезЁЯНжЁЯНеЁЯНЪ",
          "ЁЯлЦтШХЁЯН╣ЁЯН╖ЁЯеЫ",
          "тШХЁЯзГЁЯНйЁЯНжЁЯНЩ",
          "ЁЯНБЁЯМ╛ЁЯТоЁЯНВЁЯМ┐",
          "ЁЯМия╕ПЁЯМея╕ПтЫИя╕ПЁЯМйя╕ПЁЯМзя╕П",
          "ЁЯМ╖ЁЯП╡я╕ПЁЯМ╕ЁЯМ║ЁЯТР",
          "ЁЯТоЁЯМ╝ЁЯМ╗ЁЯНАЁЯНБ",
          "ЁЯзЯЁЯж╕ЁЯж╣ЁЯзЩЁЯС╕",
          "ЁЯзЕЁЯНаЁЯеХЁЯМ╜ЁЯеж",
          "ЁЯР╖ЁЯР╣ЁЯРнЁЯРиЁЯР╗тАНтЭДя╕П",
          "ЁЯжЛЁЯРЗЁЯРАЁЯРИЁЯРИтАНтмЫ",
          "ЁЯМ╝ЁЯМ│ЁЯМ▓ЁЯМ┤ЁЯМ╡",
          "ЁЯейЁЯНЛЁЯНРЁЯНИЁЯНЗ",
          "ЁЯН┤ЁЯН╜я╕ПЁЯФкЁЯН╢ЁЯеГ",
          "ЁЯХМЁЯП░ЁЯПйтЫйя╕ПЁЯПй",
          "ЁЯОЙЁЯОКЁЯОИЁЯОВЁЯОА",
          "ЁЯк┤ЁЯМ╡ЁЯМ┤ЁЯМ│ЁЯМ▓",
          "ЁЯОДЁЯОЛЁЯОНЁЯОСЁЯОО",
          "ЁЯжЕЁЯжЬЁЯХКя╕ПЁЯждЁЯжв",
          "ЁЯждЁЯжйЁЯжЪЁЯжГЁЯжЖ",
          "ЁЯРмЁЯжнЁЯжИЁЯРЛЁЯР│",
          "ЁЯРФЁЯРЯЁЯРаЁЯРбЁЯжР",
          "ЁЯжйЁЯжАЁЯжСЁЯРЩЁЯжк",
          "ЁЯРжЁЯжВЁЯХ╖я╕ПЁЯХ╕я╕ПЁЯРЪ",
          "ЁЯекЁЯН░ЁЯезЁЯНиЁЯНи",
          " ЁЯемЁЯНЙЁЯзБЁЯзЗ",
        ]

TAGMES = [
    " **тА╗ ╔к с┤Ес┤П╔┤'с┤Ы с┤Пс┤бс┤З ╩Пс┤Пс┤Ь s╩Ь╔кс┤Ы...с░ФсйЪ**",
    " **тА╗ ╥Ус┤П╩А╔вс┤Зс┤Ы с┤А╩Щс┤Пс┤Ьс┤Ы с┤Нс┤З ╩Я╔кс┤Лс┤З ╩Пс┤Пс┤Ь с┤Е╔кс┤Е ╩Пс┤Пс┤Ь╩А ╔в╩Пс┤Н ╩Ас┤Пс┤Ьс┤Ы╔к╔┤с┤З...с░ФсйЪ**",
    " **тА╗ ╔┤с┤П ╩Яс┤Пс┤ас┤З ╩Яс┤З╥Ус┤Ы, с┤П╔┤╩Я╩П с┤Нс┤Зс┤Нс┤Зs...с░ФсйЪ**",
    " **тА╗ с┤Ы╩Ь╔кs ╔в╩Ас┤Пс┤Ьс┤Ш ╔┤с┤Зс┤Зс┤Еs с┤Нс┤З с┤Нс┤П╩Ас┤З с┤Ы╩Ьс┤А╔┤ ╩Пс┤Пс┤Ь с┤Ес┤П...с░ФсйЪ**",
    " **тА╗ ╔┤с┤Ас┤Нс┤З ╔к╔┤ ╩Ьс┤Зс┤А╩Ас┤Ы? ╔┤с┤А╩Ь, ╔кс┤Ы's ╔к╔┤ с┤Н╩П с┤Шс┤А╩П╩Яс┤Ас┤Ыс┤З╩А ╩Я╔кsс┤Ы...с░ФсйЪ**",
    " **тА╗ ╩Пс┤Пс┤Ь╩А ╥У╩А╔кс┤З╔┤с┤Еs? с┤Ш╩Ас┤П╩Щс┤А╩Щ╩Я╩П ╔к╔┤ с┤Н╩П с┤Ес┤Нs...с░ФсйЪ**",
    " **тА╗ с┤Нс┤Зс┤Нс┤П╩А╔кс┤Зs? ╔к с┤П╔┤╩Я╩П ╩Ас┤Зс┤Нс┤Зс┤Н╩Щс┤З╩А с┤Шс┤Аssс┤бс┤П╩Ас┤Еs...с░ФсйЪ**",
    " **тА╗ с┤Ш╩Ас┤П╥Ус┤Зss╔кс┤П╔┤: ╥Ус┤Ь╩Я╩Я-с┤Ы╔кс┤Нс┤З с┤Ш╩Ас┤П╩Щ╩Яс┤Зс┤Н...с░ФсйЪ**",
    " **тА╗ ╩Я╔кс┤а╔к╔┤╔в ╔к╔┤ ╩Пс┤Пс┤Ь╩А ╩Ьс┤Зс┤Ас┤Е ╩Ас┤З╔┤с┤Ы ╥У╩Ас┤Зс┤З...с░ФсйЪ**",
    " **тА╗ ╔вс┤Пс┤Пс┤Е с┤Нс┤П╩А╔┤╔к╔┤╔в, ╩Щс┤Ь╔к╩Яс┤Е с┤Е╔к╥У╥Ус┤З╩Ас┤З╔┤с┤Ы...с░ФсйЪ**",
    " **тА╗ ╔вс┤Пс┤Пс┤Е ╔┤╔к╔в╩Ьс┤Ы. ╩Ас┤Зsс┤Ы ╔кs с┤Дс┤П╔┤s╔кsс┤Ыс┤З╔┤с┤Д╩П...с░ФсйЪ**",
    " **тА╗ ╥Ус┤Зс┤З╩Я╔к╔┤╔в ╩Щ╩Ас┤Пс┤Лс┤З╩А с┤Ы╩Ьс┤А╔┤ с┤Н╩П с┤б╔к╥У╔к...с░ФсйЪ**",
    " **тА╗ sс┤Пс┤Нс┤Зс┤П╔┤с┤З sс┤А╩П ╩Ь╔к ╩Щс┤З╥Ус┤П╩Ас┤З ╔к с┤Ыс┤А╩Яс┤Л с┤Ыс┤П с┤Н╩Пsс┤З╩Я╥У...с░ФсйЪ**",
    " **тА╗ с┤б╩Ьс┤Ас┤ЫтАЩs ╥Ус┤П╩А с┤Е╔к╔┤╔┤с┤З╩А? ╩Ьс┤Пс┤Шс┤З╥Ус┤Ь╩Я╩Я╩П с┤Зс┤Е╔к╩Щ╩Яс┤З...с░ФсйЪ**",
    " **тА╗ ╔кs с┤Ы╩Ь╔кs ╩Ас┤Зс┤А╩Я ╩Я╔к╥Ус┤З с┤П╩А с┤А╔┤с┤Пс┤Ы╩Ьс┤З╩А с┤вс┤Пс┤Пс┤Н с┤Дс┤А╩Я╩Я...с░ФсйЪ**",
    " **тА╗ с┤б╩Ь╩П с┤Ес┤П╔┤'с┤Ы ╩Пс┤Пс┤Ь с┤Нс┤Зssс┤А╔вс┤З? ╩Яс┤Пsс┤Ы ╩Пс┤Пс┤Ь╩А ╥У╔к╔┤╔вс┤З╩Аs?...с░ФсйЪ**",
    " **тА╗ ╔ктАЩс┤Н ╔к╔┤╔┤с┤Пс┤Дс┤З╔┤с┤Ы с┤Ь╔┤с┤Ы╔к╩Я с┤Ш╩Ас┤Пс┤ас┤З╔┤ с┤Пс┤Ш...с░ФсйЪ**",
    " **тА╗ ╩Пс┤Зsс┤Ыс┤З╩Ас┤Ес┤А╩П с┤бс┤Аs ╥У╔к╩Ас┤З, ╔┤с┤П с┤Дс┤Ас┤Ш...с░ФсйЪ**",
    " **тА╗ с┤бс┤Аs ╔в╩А╔к╔┤с┤Е╔к╔┤╔в ╩Пс┤Зsс┤Ыс┤З╩Ас┤Ес┤А╩П, ╩Пс┤Пс┤Ь?...с░ФсйЪ**",
    " **тА╗ с┤Ы╩Ь╔кs ╔в╩Ас┤Пс┤Ьс┤Ш ╔┤с┤Зс┤Зс┤Еs с┤Нс┤П╩Ас┤З с┤Шс┤Пс┤бс┤З╩А ╥У╩А╔кс┤З╔┤с┤Еs...с░ФсйЪ**",
    " **тА╗ с┤Дс┤А╔┤ ╩Пс┤Пс┤Ь s╔к╔┤╔в? ╔к с┤Дс┤А╔┤ ╩Щс┤А╩Ас┤Л...с░ФсйЪ**",
    " **тА╗ ╩Яс┤Зс┤ЫтАЩs с┤Ыс┤Ас┤Лс┤З с┤А с┤бс┤А╩Яс┤Л с┤Ыс┤П с┤Ы╩Ьс┤З ╥У╩А╔кс┤Е╔вс┤З...с░ФсйЪ**",
    " **тА╗ sс┤Ыс┤А╩П sс┤П╩Я╔кс┤Е, с┤А╩Яс┤бс┤А╩Пs...с░ФсйЪ**",
    " **тА╗ ╥У╩А╔кс┤З╔┤с┤Еs? ╩Пс┤Зс┤А╩Ь ╩Я╔кс┤Лс┤З с┤Ыс┤Зс┤Ас┤Н с┤Ес┤Пс┤Зс┤Н...с░ФсйЪ**",
    " **тА╗ с┤Нс┤А╩А╩А╔кс┤Зс┤Е с┤Ыс┤П с┤Ы╩Ьс┤З ╔в╩А╔к╔┤с┤Е...с░ФсйЪ**",
    " **тА╗ ╔в╩Ьс┤Пsс┤Ы с┤Нс┤Пс┤Ес┤З ╥Ус┤П╩А с┤А ╥Ус┤Зс┤б с┤Ес┤А╩Пs...с░ФсйЪ**",
    " **тА╗ ╩Я╔к╔┤с┤Л ╔к╔┤ ╩Щ╔кс┤П. ╩Щ╩А╔к╔┤╔в с┤А s╔┤с┤Ас┤Дс┤Л...с░ФсйЪ**",
    " **тА╗ с┤бс┤Аs ╥Ус┤Ь╔┤, с┤Ь╔┤с┤Ы╔к╩Я с┤Ы╩Ьс┤З с┤б╔к╥У╔к с┤Е╔кс┤Зс┤Е...с░ФсйЪ**",
    " **тА╗ ╔в╩Ас┤Пс┤Ьс┤Ш с┤Пс┤б╔┤с┤З╩А? ╔┤с┤П, с┤Кс┤Ьsс┤Ы с┤Ы╩Ьс┤З с┤Нс┤Зс┤Нс┤З с┤Ес┤Зс┤А╩Яс┤З╩А...с░ФсйЪ**",
    " **тА╗ ╔┤с┤Пsс┤Ыс┤А╩Я╔в╔кс┤А ╩Ь╔кс┤Ыs ╩Ьс┤А╩Ас┤Е ╩Яс┤Ас┤Ыс┤З ╔┤╔к╔в╩Ьс┤Ы...с░ФсйЪ**",
    " **тА╗ ╩Яс┤Зс┤ЫтАЩs с┤Шс┤А╩Ас┤Ы╩П ╩Я╔кс┤Лс┤З с┤Ы╩Ьс┤З с┤Дс┤Пс┤Ес┤З с┤Дс┤Пс┤Нс┤Ш╔к╩Яс┤Зс┤Е...с░ФсйЪ**",
    " **тА╗ с┤б╩Ьс┤Ас┤Ы с┤а╔к╩Щс┤Зs с┤Ыс┤Пс┤Ес┤А╩П?...с░ФсйЪ**",
    " **тА╗ ╩Я╔кsс┤Ыс┤З╔┤ с┤Ьс┤Ш, ╔кс┤ЫтАЩs ╔кс┤Нс┤Шс┤П╩Ас┤Ыс┤А╔┤с┤Ы... с┤Л╔к╔┤с┤Ес┤А...с░ФсйЪ**",
    " **тА╗ с┤б╩Ьс┤Ас┤Ы с┤Е╔кс┤Е ╩Пс┤Пс┤Ь с┤Ес┤П с┤Ыс┤Пс┤Ес┤А╩П, с┤Л╔к╔┤╔в?...с░ФсйЪ**",
    " **тА╗ sс┤Ас┤б ╩Пс┤Пс┤Ь ╔вс┤П с┤П╥У╥У╩Я╔к╔┤с┤З, с┤Ыс┤Пс┤П ╩Щс┤Ас┤Е...с░ФсйЪ**",
    " **тА╗ с┤Ас┤Ес┤Н╔к╔┤? ╔┤с┤А╩Ь, с┤Кс┤Ьsс┤Ы с┤Ы╩Ьс┤З ╩Ьс┤Ьс┤Нс┤А╔┤ ╔в╩Я╔кс┤Ыс┤Д╩Ь...с░ФсйЪ**",
    " **тА╗ ╔┤с┤П с┤Дс┤Пс┤Нс┤Н╔кс┤Ыс┤Нс┤З╔┤с┤Ыs, с┤П╔┤╩Я╩П с┤Дс┤Пс┤Пс┤Л╔кс┤Зs...с░ФсйЪ**",
    " **тА╗ с┤Ш╩А╔кsс┤П╔┤с┤З╩А с┤П╥У с┤Ы╩Ь╔кs с┤Д╩Ьс┤Ас┤Ы ╩Яс┤Пс┤Пс┤Ш...с░ФсйЪ**",
    " **тА╗ sс┤Ас┤б ╩Пс┤Пс┤Ь ╩Пс┤Зsс┤Ыс┤З╩Ас┤Ес┤А╩П, sс┤Д╩Ас┤П╩Я╩Я╔к╔┤╔в ╩Я╔кс┤Лс┤З с┤А ╩Щс┤Пss...с░ФсйЪ**",
    " **тА╗ ╥У╩Ас┤Пс┤Н с┤Ы╩Ьс┤З ╩Яс┤А╔┤с┤Е с┤П╥У с┤б╔к╥У╔к с┤Е╩Ас┤Пс┤Шs...с░ФсйЪ**",
    " **тА╗ с┤П╔┤╩Я╔к╔┤с┤З, ╩Щс┤Ьс┤Ы ╔┤с┤Пс┤Ы с┤Ас┤ас┤А╔к╩Яс┤А╩Щ╩Яс┤З...с░ФсйЪ**",
    " **тА╗ ╥Ус┤Ас┤а с┤Зс┤Ас┤Ы? с┤А╔┤╩Пс┤Ы╩Ь╔к╔┤╔в с┤Ы╩Ьс┤Ас┤ЫтАЩs ╥У╩Ас┤Зс┤З...с░ФсйЪ**",
    " **тА╗ с┤Ас┤Ес┤Е с┤Нс┤З ╥Ус┤П╩А с┤Нс┤Ьs╔кс┤Д + с┤Нс┤Зс┤Нс┤Зs, ╔┤с┤П с┤Дс┤Ас┤Ш...с░ФсйЪ**",
    " **тА╗ с┤Ы╩Ас┤Ьс┤Ы╩Ь с┤П╩А с┤Ес┤А╩Ас┤З? ╔к с┤Ес┤А╩Ас┤З ╩Пс┤Пс┤Ь с┤Ыс┤П sс┤Ыс┤А╩П с┤П╥У╥У╩Я╔к╔┤с┤З...с░ФсйЪ**",
    " **тА╗ ╩Щс┤Зс┤З╔┤ sс┤Ьs ╩Яс┤Ас┤Ыс┤З╩Я╩П, с┤А╔к╔┤'с┤Ы ╔вс┤П╔┤╔┤с┤А ╩Я╔кс┤З...с░ФсйЪ**",
    " **тА╗ с┤б╩Ьс┤Ас┤Ы ╩Ьс┤Ас┤Шс┤Шс┤З╔┤с┤Зс┤Е? ╩Щс┤Ь╥У╥Ус┤З╩А╔к╔┤╔в ╩Я╔к╥Ус┤З...с░ФсйЪ**",
    " **тА╗ с┤Д╩Ьс┤Пс┤Дс┤П╩Яс┤Ас┤Ыс┤З? ╔┤с┤А╩Ь, с┤Ш╩Ас┤Пс┤Ыс┤З╔к╔┤ ╩Щс┤А╩Аs...с░ФсйЪ**",
    " **тА╗ ╩Ьс┤З╩П с┤Л╔к╔┤╔в, с┤бс┤Ас┤Лс┤З с┤Ьс┤Ш...с░ФсйЪ**",
    " **тА╗ ╩Щс┤З с┤Нс┤А╔┤ с┤З╔┤с┤Пс┤Ь╔в╩Ь с┤Ыс┤П sс┤Шс┤Ас┤Н с┤Нс┤З с┤Ыс┤Пс┤П...с░ФсйЪ**",
    " **тА╗ ╩Пс┤Пс┤Ь sс┤А╩П╔к╔┤тАЩ ╔вс┤Пс┤Пс┤Е с┤П╩А ╔вс┤П╔┤с┤З?...с░ФсйЪ**",
    " **тА╗ с┤б╩Ьс┤Ас┤Ыsс┤Ас┤Шс┤Ш ╔┤с┤Ьс┤Н╩Щс┤З╩А? ╔┤с┤А╩Ь, sс┤З╔┤с┤Е с┤Нс┤З с┤Нс┤Зс┤Нс┤Зs ╔к╔┤sс┤Ыс┤Зс┤Ас┤Е...с░ФсйЪ**"
]

VC_TAG = [
    " **тА╗ ржЖржорж┐ рждрзЛржХрзЗ ржХрж┐ржЫрзБржЗ ржзрж╛рж░ ржжрж┐ржЗржирж┐...ЁЯТе**",
    " **тА╗ ржпрзЗржоржи ржЬрж┐ржо ржЫрзЗржбрж╝рзЗржЫрж┐рж╕, рждрзЗржоржи ржЖржорж╛ржХрзЗржУ ржнрзБрж▓рзЗ ржпрж╛...ЁЯТе**",
    " **тА╗ ржнрж╛рж▓рзЛржмрж╛рж╕рж╛ рж╢рзЗрж╖, ржПржЦржи рж╢рзБржзрзБ ржорж┐ржо ржЖржЫрзЗ...ЁЯТе**",
    " **тА╗ ржПржЗ ржЧрзНрж░рзБржк ржЖржорж╛ржХрзЗ ржмрзЗрж╢рж┐ ржжрж░ржХрж╛рж░...ЁЯТе**",
    " **тА╗ ржирж╛ржо ржоржирзЗ рж░рж╛ржЦрж┐рж╕ ржирж╛, ржкрзЗржорзЗржирзНржЯ ржбрж┐ржЙ ржоржирзЗ рж░рж╛ржЦ...ЁЯТе**",
    " **тА╗ рждрзЛрж░ ржмржирзНржзрзБ? ржУ рждрзЛ ржЖржорж╛рж░ ржЗржиржмржХрзНрж╕рзЗ...ЁЯТе**",
    " **тА╗ рж╕рзНржорзГрждрж┐? ржкрж╛рж╕ржУржпрж╝рж╛рж░рзНржб ржЫрж╛ржбрж╝рж╛ ржХрж┐ржЫрзБ ржоржирзЗ ржерж╛ржХрзЗ ржирж╛...ЁЯТе**",
    " **тА╗ ржкрзНрж░ржлрзЗрж╢ржи? ржлрзБрж▓-ржЯрж╛ржЗржо ржкрзНрж░ржмрж▓рзЗржо...ЁЯТе**",
    " **тА╗ ржорж╛ржерж╛ржпрж╝ ржнрж╛ржбрж╝рж╛ ржирж╛ ржжрж┐ржпрж╝рзЗ ржерж╛ржХрж┐...ЁЯТе**",
    " **тА╗ рж╕рзБржкрзНрж░ржнрж╛рждред ржмрж┐рж▓рзНржб ржбрж┐ржлрж╛рж░рзЗржирзНржЯ...ЁЯТе**",
    " **тА╗ рж╢рзБржнрж░рж╛рждрзНрж░рж┐ред ржХржирж╕рж┐рж╕рзНржЯрзЗржирзНрж╕рж┐ржЗ ржЖрж╕рж▓ ржмрж┐рж╢рзНрж░рж╛ржо...ЁЯТе**",
    " **тА╗ ржЖржорж╛рж░ ржЕржмрж╕рзНржерж╛ ржПржЦржи WiFi ржПрж░ ржЪрзЗржпрж╝рзЗ ржЦрж╛рж░рж╛ржк...ЁЯТе**",
    " **тА╗ ржХрзЗржЙ ржХржерж╛ ржмрж▓ржмрж┐? ржирж╛рж╣рж▓рзЗ ржирж┐ржЬрзЗржХрзЗржЗ ржорзЗрж╕рзЗржЬ ржХрж░ржм...ЁЯТе**",
    " **тА╗ рж░рж╛рждрзЗрж░ ржЦрж╛ржмрж╛рж░рзЗ ржХрж┐? ржЦрж╛ржУрзЯрж╛ ржЧрзЗрж▓рзЗржЗ рж╣рж▓рзЛ...ЁЯТе**",
    " **тА╗ ржПржЯрж╛ рж▓рж╛ржЗржл ржирж╛, ржЖрж░рзЗржХржЯрж╛ ржЬрзБржо ржорж┐ржЯрж┐ржВ ржоржирзЗ рж╣ржЪрзНржЫрзЗ...ЁЯТе**",
    " **тА╗ ржорзЗрж╕рзЗржЬ ржХрж░рж┐рж╕ ржирж╛ ржХрзЗржи? рж╣рж╛ржд ржнрзЗржЩрзЗ ржЧрзЗржЫрзЗ ржирж╛ржХрж┐?...ЁЯТе**",
    " **тА╗ ржирж┐рж░рзНржжрзЛрж╖, ржпрждржХрзНрж╖ржг ржирж╛ ржкрзНрж░ржорж╛ржг рж╣ржпрж╝ ржЖржорж┐ ржЕржк...ЁЯТе**",
    " **тА╗ ржЧрждржХрж╛рж▓ ЁЯФе ржЫрж┐рж▓рзЛ, ржирзЛ ржХрзНржпрж╛ржк...ЁЯТе**",
    " **тА╗ ржХрж╛рж▓ржУ ржЧрзНрж░рж╛ржЗржирзНржб ржХрж░ржЫрж┐рж▓рж╛ржо, рждрзБржЗ?...ЁЯТе**",
    " **тА╗ ржПржЗ ржЧрзНрж░рзБржкрзЗ ржкрж╛ржУрзЯрж╛рж░ржлрзБрж▓ ржмржирзНржзрзБрж░ ржжрж░ржХрж╛рж░...ЁЯТе**",
    " **тА╗ ржЧрж╛ржи ржЧрж╛ржЗрждрзЗ ржкрж╛рж░рж┐рж╕? ржЖржорж┐ рждрзЛ ржШрзЗржЙ ржШрзЗржЙ ржХрж░рждрзЗ ржкрж╛рж░рж┐...ЁЯТе**",
    " **тА╗ ржЪрж▓ ржлрзНрж░рж┐ржЬ ржкрж░рзНржпржирзНржд рж╣рж╛ржБржЯрж┐...ЁЯТе**",
    " **тА╗ рж╕ржмрж╕ржорзЯ рж╕рзНржЯрзЗржбрж┐ ржерж╛ржХ...ЁЯТе**",
    " **тА╗ ржмржирзНржзрзБрж░рж╛? ржЯрж┐ржо ржбрзБржорзЗрж░ ржоржд...ЁЯТе**",
    " **тА╗ ржЧрзНрж░рж╛ржЗржирзНржбрзЗрж░ рж╕рж╛ржерзЗ ржмрж┐рзЯрзЗ рж╣рзЯрзЗржЫрзЗ...ЁЯТе**",
    " **тА╗ ржХрж┐ржЫрзБржжрж┐ржи ржШрзЛрж╕рзНржЯ ржорзЛржбрзЗ ржерж╛ржХржм...ЁЯТе**",
    " **тА╗ ржмрж╛рзЯрзЛрждрзЗ рж▓рж┐ржВржХ ржжрж┐ржЫрж┐ред ржЦрж╛ржмрж╛рж░ ржирж┐рзЯрзЗржЗ ржЖрж╕рж┐рж╕...ЁЯТе**",
    " **тА╗ ржоржЬрж╛ рж╣ржЪрзНржЫрж┐рж▓, WiFi ржорж╛рж░рж╛ ржирж╛ ржЧрзЗрж▓рзЗ ржнрж╛рж▓рзЛржЗ ржЪрж▓ржЫрж┐рж▓...ЁЯТе**",
    " **тА╗ ржЖржорж┐ ржЧрзНрж░рзБржкрзЗрж░ ржорж╛рж▓рж┐ржХ ржирж╛, ржорж┐ржо ржбрж┐рж▓рж╛рж░...ЁЯТе**",
    " **тА╗ рж░рж╛ржд ржЧржнрзАрж░рзЗ ржирж╕рзНржЯрж╛рж▓ржЬрж┐рзЯрж╛ ржорзЗрж░рзЗ ржжрзЗрзЯ...ЁЯТе**",
    " **тА╗ ржкрж╛рж░рзНржЯрж┐ ржХрж░ ржпрзЗржи ржХрзЛржб ржХржорзНржкрж╛ржЗрж▓ рж╣рзЯрзЗ ржЧрзЗржЫрзЗ...ЁЯТе**",
    " **тА╗ ржЖржЬржХрзЗрж░ ржнрж╛ржЗржм ржХрзА?...ЁЯТе**",
    " **тА╗ рж╢рзЛржи, ржХрж┐ржЫрзБ ржЬрж░рзБрж░рж┐ ржХржерж╛ ржмрж▓рж╛рж░ ржЖржЫрзЗ... ржПржХржЯрзБ...ЁЯТе**",
    " **тА╗ ржЖржЬ ржХрзА ржХрж░рж▓рж┐, ржнрж╛ржЗ?...ЁЯТе**",
    " **тА╗ ржжрзЗржЦрж▓рж╛ржо ржЕржлрж▓рж╛ржЗржи ржЪрж▓рзЗ ржЧрзЗрж▓рж┐...ЁЯШотАНЁЯТиЁЯТе**",
    " **тА╗ ржЕрзНржпрж╛ржбржорж┐ржи? ржирж╛ рж░рзЗ, ржЖржорж┐ рждрзЛ рж╣рж┐ржЙржорзНржпрж╛ржи ржЧрзНрж▓рж┐ржЪ...ЁЯТе**",
    " **тА╗ ржХрзЛржирзЛ ржХржорж┐ржЯржорзЗржирзНржЯ ржирж╛, рж╢рзБржзрзБ ржХрзБржХрж┐...ЁЯТе**",
    " **тА╗ ржПржЗ ржЪрзНржпрж╛ржЯ рж▓рзБржкрзЗрж░ ржмржирзНржжрзА рж╣рзЯрзЗ ржЧрзЗржЫрж┐...ЁЯТе**",
    " **тА╗ ржЧрждржХрж╛рж▓ рждрзЛржХрзЗ ржжрзЗржЦрж▓рж╛ржо рж╕рзНржХрзНрж░рж▓ ржХрж░рждрзЗ, ржмрж╕рзЗрж░ ржорждрзЛ...ЁЯТе**",
    " **тА╗ WiFi-рж╣рзАржи ржЬржорж┐рж░ рж▓рзЛржХ ржЖржорж┐...ЁЯТе**",
    " **тА╗ ржЕржирж▓рж╛ржЗржи ржЖржЫрж┐, ржХрж┐ржирзНрждрзБ ржЕрзНржпрж╛ржнрзЗржЗрж▓рзЗржмрж▓ ржирж╛...ЁЯТе**",
    " **тА╗ ржлрзЗржнрж╛рж░рж┐ржЯ ржЦрж╛ржмрж╛рж░? ржпрзЗржЯрж╛ ржлрзНрж░рж┐ рж╕рзЗржЯрж╛...ЁЯТе**",
    " **тА╗ ржорж┐ржЙржЬрж┐ржХ + ржорж┐ржо ржЪрж╛ржЗрж▓рзЗ ржЖржорж╛ржХрзЗ ржЕрзНржпрж╛ржб ржжрзЗ, ржирзЛ ржХрзНржпрж╛ржк...ЁЯТе**",
    " **тА╗ ржЯрзНрж░рзБрже ржирж╛ржХрж┐ ржбрзЗрзЯрж╛рж░? ржбрзЗрзЯрж╛рж░ ржжрж┐рж▓рж╛ржо ржЕржлрж▓рж╛ржЗржирзЗ ржерж╛ржХ...ЁЯТе**",
    " **тА╗ ржПржХржЯрзБ рж╕рж╛рж╕ рж╣ржЪрзНржЫрж┐, ржмрж▓рзЗржЗ ржжрж┐рж▓рж╛ржо...ЁЯТе**",
    " **тА╗ ржХрзА рж╣ржЗрж▓? ржЬрзАржмржи ржмрж╛ржлрж╛рж░рж┐ржВ ржХрж░ржЫрзЗ...ЁЯТе**",
    " **тА╗ ржЪржХрзЛрж▓рзЗржЯ? ржирж╛ ржнрж╛ржЗ, ржкрзНрж░рзЛржЯрж┐ржи ржмрж╛рж░...ЁЯТе**",
    " **тА╗ ржУржа ржнрж╛ржЗ, ржжрж┐ржи рж╢рзБрж░рзБ рж╣ржЗржЫрзЗ...ЁЯТе**",
    " **тА╗ ржЖржорж╛ржХрзЗржУ ржПржХржЯрзБ рж╕рзНржкрзНржпрж╛ржо ржХрж░, ржнрж╛ржЗ рж╣рзЯрзЗ ржпрж╛...ЁЯТе**",
    " **тА╗ ржмрж┐ржжрж╛рзЯ ржмрж▓рж▓рж┐ ржирж╛ржХрж┐ ржЖржмрж╛рж░ рж╕рж╛рж╕ ржХрж░рж▓рж┐?...ЁЯТе**",
    " **тА╗ WhatsApp ржирж╛ржорзНржмрж╛рж░ ржирж╛, ржорж┐ржо ржкрж╛ржарж╛ ржмрж░ржВ...ЁЯТе**"
]



@app.on_message(filters.command(["entag", "englishtag" ], prefixes=["/", "@", "#"]))
async def mentionall(client, message):
    chat_id = message.chat.id
    if message.chat.type == ChatType.PRIVATE:
        return await message.reply("р╣П с┤Ы╩Ь╔кs с┤Дс┤Пс┤Нс┤Нс┤А╔┤с┤Е ╔кs с┤П╔┤╩Я╩П ╥Ус┤П╩А ╔в╩Ас┤Пс┤Ьс┤Шs.")

    is_admin = False
    try:
        participant = await client.get_chat_member(chat_id, message.from_user.id)
    except UserNotParticipant:
        is_admin = False
    else:
        if participant.status in (
            ChatMemberStatus.ADMINISTRATOR,
            ChatMemberStatus.OWNER
        ):
            is_admin = True
    if not is_admin:
        return await message.reply("р╣П ╩Пс┤Пс┤Ь с┤А╩Ас┤З ╔┤с┤Пс┤Ы с┤А╔┤ с┤Ас┤Ес┤Н╔к╔┤ с┤Ес┤Зс┤А╩А, с┤П╔┤╩Я╩П с┤Ас┤Ес┤Н╔к╔┤s с┤Дс┤А╔┤ с┤Ыс┤А╔в с┤Нс┤Зс┤Н╩Щс┤З╩Аs. ")

    if message.reply_to_message and message.text:
        return await message.reply("/entag ╔вс┤Пс┤Пс┤Е с┤Нс┤П╩А╔┤╔к╔┤╔в, с┤Ы╩Пс┤Шс┤З ╩Я╔кс┤Лс┤З с┤Ы╩Ь╔кs / ╩Ас┤Зс┤Ш╩Я╩П с┤Ыс┤П с┤А╔┤╩П с┤Нс┤Зssс┤А╔вс┤З ╔┤с┤Зxс┤Ы с┤Ы╔кс┤Нс┤З ╥Ус┤П╩А с┤Ыс┤А╔в╔в╔к╔┤╔в...")
    elif message.text:
        mode = "text_on_cmd"
        msg = message.text
    elif message.reply_to_message:
        mode = "text_on_reply"
        msg = message.reply_to_message
        if not msg:
            return await message.reply("/entag ╔вс┤Пс┤Пс┤Е с┤Нс┤П╩А╔┤╔к╔┤╔в, с┤Ы╩Пс┤Шс┤З ╩Я╔кс┤Лс┤З с┤Ы╩Ь╔кs / ╩Ас┤Зс┤Ш╩Я╩П с┤Ыс┤П с┤А╔┤╩П с┤Нс┤Зssс┤А╔вс┤З ╔┤с┤Зxс┤Ы с┤Ы╔кс┤Нс┤З ╥Ус┤П╩А с┤Ыс┤А╔в╔в╔к╔┤╔в...")
    else:
        return await message.reply("/entag ╔вс┤Пс┤Пс┤Е с┤Нс┤П╩А╔┤╔к╔┤╔в, с┤Ы╩Пс┤Шс┤З ╩Я╔кс┤Лс┤З с┤Ы╩Ь╔кs / ╩Ас┤Зс┤Ш╩Я╩П с┤Ыс┤П с┤А╔┤╩П с┤Нс┤Зssс┤А╔вс┤З ╔┤с┤Зxс┤Ы с┤Ы╔кс┤Нс┤З ╥Ус┤П╩А с┤Ыс┤А╔в╔в╔к╔┤╔в...")
    if chat_id in spam_chats:
        return await message.reply("р╣П с┤Ш╩Яс┤Зс┤Аsс┤З с┤Ас┤Ы ╥У╔к╩Аsс┤Ы sс┤Ыс┤Пс┤Ш ╩Ас┤Ь╔┤╔┤╔к╔┤╔в с┤Нс┤З╔┤с┤Ы╔кс┤П╔┤ с┤Ш╩Ас┤Пс┤Дс┤Зss...")
    spam_chats.append(chat_id)
    usrnum = 0
    usrtxt = ""
    async for usr in client.get_chat_members(chat_id):
        if not chat_id in spam_chats:
            break
        if usr.user.is_bot:
            continue
        usrnum += 1
        usrtxt += "<a href='tg://user?id={}'>{}</a>".format(usr.user.id, usr.user.first_name)

        if usrnum == 1:
            if mode == "text_on_cmd":
                txt = f"{usrtxt} {random.choice(TAGMES)}"
                await client.send_message(chat_id, txt)
            elif mode == "text_on_reply":
                await msg.reply(f"[{random.choice(EMOJI)}](tg://user?id={usr.user.id})")
            await asyncio.sleep(4)
            usrnum = 0
            usrtxt = ""
    try:
        spam_chats.remove(chat_id)
    except:
        pass


@app.on_message(filters.command(["bntag"], prefixes=["/", "@", "#"]))
async def mention_allvc(client, message):
    chat_id = message.chat.id
    if message.chat.type == ChatType.PRIVATE:
        return await message.reply("р╣П с┤Ы╩Ь╔кs с┤Дс┤Пс┤Нс┤Нс┤А╔┤с┤Е ╔кs с┤П╔┤╩Я╩П ╥Ус┤П╩А ╔в╩Ас┤Пс┤Ьс┤Шs.")

    is_admin = False
    try:
        participant = await client.get_chat_member(chat_id, message.from_user.id)
    except UserNotParticipant:
        is_admin = False
    else:
        if participant.status in (
            ChatMemberStatus.ADMINISTRATOR,
            ChatMemberStatus.OWNER
        ):
            is_admin = True
    if not is_admin:
        return await message.reply("р╣П ╩Пс┤Пс┤Ь с┤А╩Ас┤З ╔┤с┤Пс┤Ы с┤А╔┤ с┤Ас┤Ес┤Н╔к╔┤ с┤Ес┤Зс┤А╩А, с┤П╔┤╩Я╩П с┤Ас┤Ес┤Н╔к╔┤s с┤Дс┤А╔┤ с┤Ыс┤А╔в с┤Нс┤Зс┤Н╩Щс┤З╩Аs. ")
    if chat_id in spam_chats:
        return await message.reply("р╣П с┤Ш╩Яс┤Зс┤Аsс┤З с┤Ас┤Ы ╥У╔к╩Аsс┤Ы sс┤Ыс┤Пс┤Ш ╩Ас┤Ь╔┤╔┤╔к╔┤╔в с┤Нс┤З╔┤с┤Ы╔кс┤П╔┤ с┤Ш╩Ас┤Пс┤Дс┤Зss...")
    spam_chats.append(chat_id)
    usrnum = 0
    usrtxt = ""
    async for usr in client.get_chat_members(chat_id):
        if not chat_id in spam_chats:
            break
        if usr.user.is_bot:
            continue
        usrnum += 1
        usrtxt += "<a href='tg://user?id={}'>{}</a>".format(usr.user.id, usr.user.first_name)

        if usrnum == 1:
            txt = f"{usrtxt} {random.choice(VC_TAG)}"
            await client.send_message(chat_id, txt)
            await asyncio.sleep(4)
            usrnum = 0
            usrtxt = ""
    try:
        spam_chats.remove(chat_id)
    except:
        pass



@app.on_message(filters.command(["cancel", "enstop", "bnstop"]))
async def cancel_spam(client, message):
    if not message.chat.id in spam_chats:
        return await message.reply("р╣П с┤Дс┤Ь╩А╩Ас┤З╔┤с┤Ы╩Я╩П ╔к'с┤Н ╔┤с┤Пс┤Ы с┤Ыс┤А╔в╔в╔к╔┤╔в с┤Ес┤Зс┤А╩А.")
    is_admin = False
    try:
        participant = await client.get_chat_member(message.chat.id, message.from_user.id)
    except UserNotParticipant:
        is_admin = False
    else:
        if participant.status in (
            ChatMemberStatus.ADMINISTRATOR,
            ChatMemberStatus.OWNER
        ):
            is_admin = True
    if not is_admin:
        return await message.reply("р╣П ╩Пс┤Пс┤Ь с┤А╩Ас┤З ╔┤с┤Пс┤Ы с┤А╔┤ с┤Ас┤Ес┤Н╔к╔┤ с┤Ес┤Зс┤А╩А, с┤П╔┤╩Я╩П с┤Ас┤Ес┤Н╔к╔┤s с┤Дс┤А╔┤ с┤Ыс┤А╔в с┤Нс┤Зс┤Н╩Щс┤З╩Аs.")
    else:
        try:
            spam_chats.remove(message.chat.id)
        except:
            pass
        return await message.reply("р╣П с┤Нс┤З╔┤с┤Ы╔кс┤П╔┤ с┤Ш╩Ас┤Пс┤Дс┤Зss sс┤Ыс┤Пс┤Шс┤Шс┤Зс┤Е р╣П")
          
